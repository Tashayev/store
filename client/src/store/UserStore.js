//15п. isAuth c AppRouter.js выносим сюда
import {makeAutoObservable} from "mobx";
//MobX — это управление состоянием простым и масштабируемым за счет прозрачного применения функционального реактивного программирования (TFRP).
// Философия MobX проста — все, что может быть получено из состояния приложения, должно быть получено автоматически.
// Обертка observer вокруг компонента автоматически определит, что рендер компонента зависит от observable-переменной,
// хотя это явно не определено. Когда эта переменная изменится, MobX позаботится о новом рендере компонента.
export default class UserStore {
    constructor() {
        this._isAuth = false//При создании навбара для проверки нужно указать false, что бы проверить ADMIN_ROUTE
        // 40п. Делаем его true для теста
        this._user = {}// '_' - условная договор, что эта переменная изменяться не может
        makeAutoObservable(this)// Теперь изменения компонентов будут отслеживаться, и будут перерендриваться(обновляться на автомате).
    }
    setIsAuth(bool){
        this._isAuth = bool
    }//Action- изменяет состояние переменной. Использование action помогает структурировать код и предотвращает
    // непреднамеренное изменение состояния, когда это не планировалось.
    setUser(user){
        this._user = user
    }
    get isAuth(){
        return this._isAuth
    }// Геттеры вызываются, если внутри были изменения(оптимизация).
    get user(){
        return this._user
    }
}